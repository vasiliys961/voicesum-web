# app.py
import streamlit as st
import openai
import os
import tempfile
import base64
from pydub import AudioSegment
from httpx import Client as HttpxClient

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(page_title="VoiceSum AI", layout="centered")
st.title("üéôÔ∏è VoiceSum AI")

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
OPENAI_API_KEY = os.environ.get("OPENAI_API_KEY")
OPENROUTER_API_KEY = os.environ.get("OPENROUTER_API_KEY")

if not OPENAI_API_KEY or not OPENROUTER_API_KEY:
    st.error("üîë –ù–µ –∑–∞–¥–∞–Ω API-–∫–ª—é—á. –ü—Ä–æ–≤–µ—Ä—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è.")
    st.stop()

# –ö–ª–∏–µ–Ω—Ç—ã
openai_client = openai.OpenAI(api_key=OPENAI_API_KEY, http_client=HttpxClient(timeout=60.0))
llm_client = openai.OpenAI(
    base_url="https://openrouter.ai/api/v1",
    api_key=OPENROUTER_API_KEY,
    http_client=HttpxClient(timeout=30.0),
)

# –í—Ä–µ–º–µ–Ω–Ω–∞—è –ø–∞–ø–∫–∞
temp_dir = tempfile.mkdtemp(prefix="voicesum_")

# === –§—É–Ω–∫—Ü–∏–∏ ===

def transcribe_audio(file_path):
    """–¢—Ä–∞–Ω—Å–∫—Ä–∏–±–∏—Ä—É–µ—Ç –∞—É–¥–∏–æ —á–µ—Ä–µ–∑ OpenAI Whisper"""
    try:
        with open(file_path, "rb") as f:
            response = openai_client.audio.transcriptions.create(
                model="whisper-1",
                file=f,
                language="ru"
            )
        return response.text.strip()
    except Exception as e:
        st.error(f"‚ùå –û—à–∏–±–∫–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏: {e}")
        return None

def generate_summary(text):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ä–µ–∑—é–º–µ —á–µ—Ä–µ–∑ Claude —á–µ—Ä–µ–∑ OpenRouter"""
    try:
        response = llm_client.chat.completions.create(
            model="anthropic/claude-3-haiku",
            messages=[
                {
                    "role": "system",
                    "content": (
                        "–¢—ã ‚Äî –ª–∞–∫–æ–Ω–∏—á–Ω—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫. –¢–≤–æ—è –∑–∞–¥–∞—á–∞: –∑–∞ 5‚Äì8 –∫–æ—Ä–æ—Ç–∫–∏—Ö —Å—Ç—Ä–æ–∫ –≤—ã–¥–∞—Ç—å —Å–∂–∞—Ç—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤. –ü–∏—à–∏ –ø–æ-—Ä—É—Å—Å–∫–∏. "
                        "–ù–∏–∫–∞–∫–∏—Ö —ç–º–æ–¥–∑–∏, –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö —Ñ—Ä–∞–∑, –≤–≤–æ–¥–Ω—ã—Ö –≤—Ä–æ–¥–µ ¬´–ò—Ç–æ–≥:¬ª. –ï—Å–ª–∏ —Ñ–∞–∫—Ç–∞ –Ω–µ—Ç ‚Äî –Ω–µ –≤—ã–¥—É–º—ã–≤–∞–π. –û–±—ä–µ–¥–∏–Ω—è–π –¥—É–±–ª–∏ –∏ —Ñ–æ—Ä–º—É–ª–∏—Ä—É–π –æ–±–æ–±—â—ë–Ω–Ω–æ."
                    )
                },
                {
                    "role": "user",
                    "content": (
                        f"–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ä–∞–∑–≥–æ–≤–æ—Ä –∏–ª–∏ –¥–æ–∫–ª–∞–¥ –Ω–∏–∂–µ –∏ –≤—ã–¥–∞–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å—Ç—Ä–æ–≥–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
                        f"–ö—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ (1‚Äì2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –º–∞–∫—Å–∏–º—É–º 220 —Å–∏–º–≤–æ–ª–æ–≤).\n"
                        f"3‚Äì5 –º–∞—Ä–∫–µ—Ä–æ–≤, –∫–∞–∂–¥—ã–π –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ, –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º: —Ä–µ—à–µ–Ω–∏—è / –¥–µ–π—Å—Ç–≤–∏—è / –¥–æ–≥–æ–≤–æ—Ä—ë–Ω–Ω–æ—Å—Ç–∏ / —Ç–µ–º—ã. –ï—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è ‚Äî –ø—Ä–æ–ø—É—Å—Ç–∏ –µ—ë. –ï—Å–ª–∏ –ø—É–Ω–∫—Ç–æ–≤ –º–Ω–æ–≥–æ ‚Äî —Å–≥—Ä—É–ø–ø–∏—Ä—É–π –∏ –æ—Å—Ç–∞–≤—å —Å–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ.\n"
                        f"–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —Å—Ç–∏–ª—é:\n"
                        f"–ö–æ—Ä–æ—Ç–∫–∏–µ —Ñ—Ä–∞–∑—ã, –≥–ª–∞–≥–æ–ª—ã –≤ –ø–æ–≤–µ–ª–∏—Ç–µ–ª—å–Ω–æ–º –∏–ª–∏ –∏–Ω—Ñ–∏–Ω–∏—Ç–∏–≤–µ (–¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π).\n"
                        f"–ë–µ–∑ –æ—Ü–µ–Ω–æ—á–Ω—ã—Ö —Å—É–∂–¥–µ–Ω–∏–π –∏ —Å–æ–≤–µ—Ç–æ–≤, —Ç–æ–ª—å–∫–æ —Ñ–∞–∫—Ç—ã –∏–∑ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞.\n"
                        f"–ù–µ –ø–æ–≤—Ç–æ—Ä—è–π –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ —Ä–∞–∑–Ω—ã–º–∏ —Å–ª–æ–≤–∞–º–∏.\n"
                        f"–ù–µ –ø—Ä–µ–≤—ã—à–∞–π 6 —Å—Ç—Ä–æ–∫ –ø–æ—Å–ª–µ —Ä–µ–∑—é–º–µ.\n"
                        f"–§–æ—Ä–º–∞—Ç –≤—ã–≤–æ–¥–∞ (—Å—Ç—Ä–æ–≥–æ):\n"
                        f"–ö—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ: <1‚Äì2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è>\n"
                        f"‚Äî –†–µ—à–µ–Ω–∏—è: <–∫—Ä–∞—Ç–∫–æ>\n"
                        f"‚Äî –î–µ–π—Å—Ç–≤–∏—è: <–∫—Ä–∞—Ç–∫–æ>\n"
                        f"‚Äî –î–æ–≥–æ–≤–æ—Ä—ë–Ω–Ω–æ—Å—Ç–∏: <–∫—Ä–∞—Ç–∫–æ>\n"
                        f"‚Äî –¢–µ–º—ã: <–∫—Ä–∞—Ç–∫–æ>\n\n"
                        f"–†–∞–∑–≥–æ–≤–æ—Ä:\n\n{text[:12000]}"
                    )
                }
            ],
            max_tokens=500,
            temperature=0.2
        )
        return response.choices[0].message.content.strip()
    except Exception as e:
        st.error(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}")
        return None

# === –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å ===

st.write("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª –∏–ª–∏ –∑–∞–ø–∏—à–∏—Ç–µ –≥–æ–ª–æ—Å —Å –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞.")

# –í—ã–±–æ—Ä: –∑–∞–≥—Ä—É–∑–∫–∞ –∏–ª–∏ –∑–∞–ø–∏—Å—å
mode = st.radio("–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–±", ["üìÅ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª", "üé§ –ó–∞–ø–∏—Å—å —Å –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞"])

audio_file = None

if mode == "üìÅ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª":
    audio_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∞—É–¥–∏–æ—Ñ–∞–π–ª", type=["wav", "mp3", "webm", "m4a"])
elif mode == "üé§ –ó–∞–ø–∏—Å—å —Å –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞":
    audio_file = st.audio_input("–ó–∞–ø–∏—à–∏—Ç–µ –≥–æ–ª–æ—Å")

if audio_file:
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
    input_path = os.path.join(temp_dir, audio_file.name)
    with open(input_path, "wb") as f:
        f.write(audio_file.read())

    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ WAV 16kHz mono
    wav_path = os.path.join(temp_dir, "input.wav")
    try:
        audio = AudioSegment.from_file(input_path)
        audio = audio.set_frame_rate(16000).set_channels(1)
        audio.export(wav_path, format="wav")
    except Exception as e:
        st.error(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: {e}")
        st.stop()

    if st.button("üîÑ –ù–∞—á–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É"):
        with st.spinner("–¢—Ä–∞–Ω—Å–∫—Ä–∏–±–∏—Ä—É—é..."):
            transcript = transcribe_audio(wav_path)
        
        if transcript:
            st.subheader("üìù –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è")
            st.write(transcript)

            with st.spinner("–ì–µ–Ω–µ—Ä–∏—Ä—É—é —Ä–µ–∑—é–º–µ..."):
                summary = generate_summary(transcript)
            
            if summary:
                st.subheader("üìã –†–µ–∑—é–º–µ (–Ω–∞ —Ä—É—Å—Å–∫–æ–º)")
                st.write(summary)